@page "/create"
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
@inject IJSRuntime js
@inject IAccountService accountService

<PageTitle>Create</PageTitle>

<h3>Create</h3>
<br />
    <input @bind="account.AccountName" class="form-control" placeholder="Account Name" />
    <br />
    <input @bind="account.Password" type="password" class="form-control" placeholder="Password" />
    <br />
    <button @onclick="Authenticate" class="btn btn-primary">Create</button>
    <br />

@if(AccountNameIsValid)
{
    <br />
    <p>To finalize your account, you will need a profile - Please enter your information</p><br />
    <input @bind="profile.FirstName" class="form-control" placeholder="First Name"/>
    <br />
    <input @bind="profile.LastName" class="form-control" placeholder="Last Name" />
    <br />
    <input @bind="profile.DoB" type="date" class="form-control"/>
    <br />
    <label>Male:</label>
    <input name="gender" type="radio" value="Male" checked="@(profile.Gender == "Male")" @onclick="@(()=>profile.Gender = "Male")"/>
    <label>Female:</label>
    <input name="gender" type="radio" value="Female" checked="@(profile.Gender == "Female")" @onclick="@(()=>profile.Gender = "Female")" />
    <br />
    <br />
    <input @bind="profile.ZipcodeID" class="form-control" />
    <br />
    <button @onclick="Complete" class="btn btn-primary">Complete</button>
}

@code {
    public bool AccountNameIsValid;

    Account account = new();
    UserProfile profile = new();

    private async Task Authenticate()
    {
        if (string.IsNullOrWhiteSpace(account.AccountName) || string.IsNullOrWhiteSpace(account.Password))
        {
            await js.InvokeVoidAsync("alert", "Please enter Account Name and Password");
            return;
        }

        var newAccount = accountService.GetAccount(account.AccountName);

        if (newAccount.ID != 0)
        {
            await js.InvokeVoidAsync("alert", "Username already in use");
            return;
        }

        AccountNameIsValid = true;
        StateHasChanged();
    }

    private async Task Complete()
    {
        if (!string.IsNullOrWhiteSpace(profile.FirstName) || !string.IsNullOrWhiteSpace(profile.LastName) || !string.IsNullOrWhiteSpace(profile.DoB.ToString()) || !string.IsNullOrWhiteSpace(profile.Gender) || !string.IsNullOrWhiteSpace(profile.ZipcodeID.ToString()))
        {
            await js.InvokeVoidAsync("alert", $"{profile.FirstName} {profile.LastName}\n{profile.DoB.ToString()} {profile.Gender}\n{profile.ZipcodeID}");
            return;
        }
        await js.InvokeVoidAsync("alert", "Not Working");
    }
}
