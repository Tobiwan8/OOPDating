@page "/Match"
@inject IProfileService profileService
@inject IZipcodeService zipcodeService
@attribute [Authorize]

<style>
    .searchBar {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .profile-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .profile-card {
        width: calc(20% - 20px);
        margin: 10px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 15px;
        display: inline-block;
        vertical-align: top;
        color: white;
    }

    .female {
        background-color: #E47474;
    }

    .male {
        background-color: #03A7F1;
    }
</style>

<h3>Match</h3>
<p>Happy hunting! Like whoever your heart desires. If people you've liked also likes you, you can talk to them in chat :D</p>
<br />
@*LAV SØGEFUNKTION*@
<p>Filter:</p>
<div class="searchBar">
    <label><b>min age:</b></label>
    <input @bind="profileSearch.AgeMin" class="form-control" style="width:50px" />
    <label><b>Max age:</b></label>
    <input @bind="profileSearch.AgeMax" class="form-control" style="width:50px" />
    <label><b>Gender:</b></label>
    <label>All:</label>
    <input name="gender" type="radio" value="All" checked="@(profileSearch.Gender == null)" @onclick="@(()=>profileSearch.Gender = null)" />
    <label>Male:</label>
    <input name="gender" type="radio" value="Male" checked="@(profileSearch.Gender == "Male")" @onclick="@(()=>profileSearch.Gender = "Male")" />
    <label>Female:</label>
    <input name="gender" type="radio" value="Female" checked="@(profileSearch.Gender == "Female")" @onclick="@(()=>profileSearch.Gender = "Female")" />
    <br />
    <label><b>Zipcode:</b></label>
    <select @bind="profileSearch.Zipcode" class="form-control" style="width:auto">
        <option value="">All</option>
        @foreach (var item in zipcodes)
        {
            <option value="@item.Zipcode">@item.Zipcode</option>
        }
    </select>
    <br />
    <label>Search by name</label>
    <input @bind="profileSearch.Name" class="form-control" style="width:300px"/>
    <button @onclick="Filter" class="btn btn-primary">Filter</button>
    <button @onclick="Clear" class="btn btn-primary" style="background-color: rebeccapurple">Clear</button>
</div>
<br />
<div class="profile-container">
    @foreach (var profile in userProfiles)
    {
        <div class="profile-card" style="@(profile.Gender == "Female" ? "background-color: red;" : "background-color: blue;")">
            <p>@profile.FirstName @profile.LastName<br /></p>
            <p>Age: @CalculateAge(profile.DoB)<br /></p>
            <p>Region: @GetRegion(profile.ZipcodeID)<br /></p>
            <p>Gender: @profile.Gender<br /></p>
            <button @onclick="HasBeenLiked" class="btn btn-primary">
                <span class="oi oi-heart" aria-hidden="true"></span>
            </button>
        </div>
    }
</div>

@code {
    private List<UserProfile> userProfiles = new();
    private List<ZipcodeCity> zipcodes = new();
    private ProfileSearch profileSearch = new();

    protected override void OnInitialized()
    {
        Filter();
        zipcodes = zipcodeService.GetZipcodeCities();
    }

    private string GetRegion(string? zipcode)
    {
        if(zipcode != null)
        {
            ZipcodeCity city = zipcodeService.GetZipcodeCity(zipcode);
            if(city.City != null)
            {
                return city.City;            
            }
        }
        return string.Empty;
    }

    private string CalculateAge(DateTime dateOfBirth)
    {
        DateTime currentDate = DateTime.Now;
        int age = currentDate.Year - dateOfBirth.Year;

        if (currentDate.Month < dateOfBirth.Month || (currentDate.Month == dateOfBirth.Month && currentDate.Day < dateOfBirth.Day))
        {
            age--;
        }

        return age.ToString();
    }

    private void HasBeenLiked()
    {

    }

    private void Filter()
    {
        userProfiles = profileService.GetProfilesBySearch(profileSearch);
        StateHasChanged();
    }

    private void Clear()
    {
        profileSearch.Name = null;
        profileSearch.AgeMin = null;
        profileSearch.AgeMax = null;
        profileSearch.Gender = null;
        profileSearch.Zipcode = null;
        userProfiles = profileService.GetProfilesBySearch(profileSearch);
        StateHasChanged();
    }
}
